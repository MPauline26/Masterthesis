ODS GRAPHICS ON / MAXOBS=10929045;

%LET USED_DATASET = DEV_SAMPLE_5Y;

/* ANALYSE DISTINCT VALUES AND DETERMINE MISSING RATE FOR ALL TYPES OF VARIABLES */
%MACRO MISS_VAR(DATA, TYPE_VAR, VAR=XXX);

%IF &VAR. = XXX %THEN %DO;

	PROC SQL NOPRINT;

		SELECT COUNT(*) INTO :TOTAL TRIMMED FROM VARIABLELIST WHERE TYPE = "&TYPE_VAR.";
		SELECT VARIABLE INTO :VAR1-:VAR&TOTAL. FROM VARIABLELIST WHERE TYPE = "&TYPE_VAR.";

	QUIT;

	%DO I = 1 %TO &TOTAL.;
	%PUT ------------ &I. OF &TOTAL.: &&VAR&I.;
		PROC SQL;

			CREATE TABLE TEMP AS
				SELECT 
					"&TYPE_VAR." AS TYPE
					,"&&VAR&I." AS VARIABLE
					,put(cats(&&VAR&I.),$100.) AS VALUE
					,COUNT(*) AS FREQ
			FROM &DATA.
			GROUP BY &&VAR&I.;
		
		QUIT;

		DATA MISS_VAR;
		SET MISS_VAR TEMP;
		IF Variable = '' THEN DELETE;
		RUN;

		PROC SQL; DROP TABLE TEMP; QUIT;

	%END;

%END;
%ELSE %DO;

		PROC SQL;

			CREATE TABLE TEMP AS
				SELECT 
					"&TYPE_VAR." AS TYPE
					,"&VAR." AS VARIABLE
					,put(cats(&VAR.),$100.) AS VALUE
					,COUNT(*) AS FREQ
			FROM &DATA.
			GROUP BY &VAR.;
		
		QUIT;

		DATA MISS_VAR;
		SET MISS_VAR TEMP;
		IF Variable = '' THEN DELETE;
		RUN;

		PROC SQL; DROP TABLE TEMP; QUIT;

%END;

%MEND;

DATA MISS_VAR;
LENGTH TYPE $ 5 VARIABLE $ 50 VALUE $ 100;
RUN;

%MISS_VAR(DATA=&USED_DATASET., TYPE_VAR=CAT);
%MISS_VAR(DATA=&USED_DATASET., TYPE_VAR=IND);
%MISS_VAR(DATA=&USED_DATASET., TYPE_VAR=NUM);
%MISS_VAR(DATA=&USED_DATASET., TYPE_VAR=MAN, VAR=st);

DATA &USED_DATASET.;
SET &USED_DATASET.(RENAME=(	cnt_borr 		= cnt_borr_raw 
						flag_fthb 		= flag_fthb_raw 
						ppmt_pnlty 		= ppmt_pnlty_raw 
						flag_sc 		= flag_sc_raw 
						ind_harp 		= ind_harp_raw 
						flag_int_only 	= flag_int_only_raw));

GROUP1 = "ALL";
GROUP2 = PUT(YEAR(DATUM),4.);

/* SET INDICATOR VARIABLES TO 1 AND 0 */
IF flag_fthb_raw = 'Y' 		THEN flag_fthb = 1; 		ELSE flag_fthb = 0;
IF ppmt_pnlty_raw = 'Y'		THEN ppmt_pnlty = 1; 		ELSE ppmt_pnlty = 0;
IF flag_sc_raw = 'Y' 		THEN flag_sc = 1; 			ELSE flag_sc = 0;
IF ind_harp_raw = 'Y' 		THEN ind_harp = 1; 			ELSE ind_harp = 0;
IF flag_int_only_raw = 'Y' 	THEN flag_int_only = 1; 	ELSE flag_int_only = 0;

/* SET MISSING VALUES TO NULL/9, ACCORDING TO DATA DICTIONARY AND MISSING ENTRY */

/* INDICATOR VARIABLES */
/* ppmt_pnlty_raw, flag_int_only have no missing entries in DEV_SAMPLE_5Y */
IF flag_fthb_raw = '9' 			THEN flag_fthb = .;
IF flag_sc_raw = '' 			THEN flag_sc = .;
IF ind_harp_raw = '' 			THEN ind_harp = .;

/* CATEGORICAL VARIABLES */
/* occpy_sts, amrtzn_type, prop_type, loan_purpose, st have no missing entries in DEV_SAMPLE_5Y*/
IF occpy_sts = '9' 				THEN occpy_sts = '9';
IF channel = '9' 				THEN channel = '9'; 
IF prop_type = '99'				THEN prop_type = '9';
IF ind_afdl = '9' 			THEN ind_afdl = '9';
IF loan_purpose = '9'			THEN loan_purpose = '9'; 
IF us_reg = '' AND st ^= '' 	THEN us_reg = 'Other'; /* US OUTSIDE OF MAIN LAND */
ELSE IF us_reg = '' 			THEN us_reg = '9';

/* NUMERICAL VARIABLES */
/* cnt_units, orig_upb, orig_loan_term have no missing entries in DEV_SAMPLE_5Y*/
IF fico = 9999 				THEN fico = .;
IF cd_msa = . 				THEN cd_msa = .; 
IF mi_pct = 999 			THEN mi_pct = .;
IF cnt_units = 99 			THEN cnt_units = .; /* no case found */
IF cltv = 999 				THEN cltv = .; /* no case found */
IF dti = 999 				THEN dti = .;
IF ltv = 999				THEN ltv = .; /* no case found */

/* CHANGE FORMAT TO NUMERIC */
cnt_borr_temp = input(cnt_borr_raw, 8.);
IF cnt_borr_raw = '99' THEN cnt_borr_temp = .;
RENAME cnt_borr_temp = cnt_borr;

RUN;

/* re-label */
%label_data(&USED_DATASET., work, VARIABLELIST, Variable, Label);

/* CALCULATE MISSING PERCENTAGE FOR ALL VARIABLES */
/* create a format to group missing and nonmissing */
proc format;
 value $missfmt '9'='Missing' other='Not Missing';
 value  missfmt  . ='Missing' other='Not Missing';
run;

PROC SQL NOPRINT;

SELECT VARIABLE INTO :CAT_VAR separated by " " FROM VARIABLELIST WHERE TYPE = "CAT";
SELECT VARIABLE INTO :NUM_VAR separated by " " FROM VARIABLELIST WHERE TYPE = "NUM";
SELECT VARIABLE INTO :IND_VAR separated by " " FROM VARIABLELIST WHERE TYPE = "IND";

SELECT VARIABLE INTO :NUM_IND_VAR separated by " " 			FROM VARIABLELIST WHERE TYPE IN ("NUM","IND");
SELECT CATS('F_',VARIABLE) INTO :ALL_VAR separated by ", " 	FROM VARIABLELIST WHERE TYPE IN ("CAT","NUM","IND");

QUIT;

ODS OUTPUT ONEWAYFREQS=WORK.MISSINGTABLE;
proc freq data=&USED_DATASET.; 
format &CAT_VAR. $missfmt.; /* apply format for the duration of this PROC */
tables &CAT_VAR. / missing missprint nocum nopercent;
format &NUM_IND_VAR. missfmt.;
tables &NUM_IND_VAR. / missing missprint nocum nopercent;
run;
/*

PROC SQL;

SELECT CATS(VARIABLE,'*GROUP2') INTO :CAT_VAR_GROUP2 separated by " " 		FROM VARIABLELIST WHERE TYPE = "CAT";
SELECT CATS(VARIABLE,'*GROUP2') INTO :NUM_IND_VAR_GROUP2 separated by " " 	FROM VARIABLELIST WHERE TYPE IN ("NUM","IND");

QUIT;

ODS OUTPUT CrossTabFreqs=WORK.MISSINGTABLE2;
proc freq data=&USED_DATASET.; 
format &CAT_VAR. $missfmt.; 
tables &CAT_VAR_GROUP2. / missing missprint nocum nopercent;
*format &NUM_IND_VAR_GROUP2. missfmt.;
*tables &NUM_IND_VAR_GROUP2. / missing missprint nocum nopercent;
run;
*/

DATA MISSINGTABLE;
RETAIN VARIABLE MISS_NONMISS;
SET MISSINGTABLE;

LENGTH VARIABLE $ 40 MISS_NONMISS $ 20;
VARIABLE = SUBSTR(Table,7);
MISS_NONMISS = TRIM(COALESCEC(&ALL_VAR.));

KEEP VARIABLE MISS_NONMISS FREQUENCY;

RUN;

PROC SQL;

CREATE TABLE MISSINGTABLE AS
	SELECT 
		VARIABLE
		,MAX(CASE WHEN MISS_NONMISS = 'Missing' THEN FREQUENCY END) AS MISSING
		,MAX(CASE WHEN MISS_NONMISS = 'Not Missing' THEN FREQUENCY END) AS NOT_MISSING
	FROM MISSINGTABLE
GROUP BY VARIABLE;

QUIT;

DATA MISSINGTABLE;
SET MISSINGTABLE;
	FORMAT MISS_PERCENT PERCENT15.10;
	MISS_PERCENT = MISSING / SUM(MISSING,NOT_MISSING);
	IF MISSING = . THEN MISS_PERCENT = 0;
RUN;

/* CALCULATE GINI VALUES FOR ALL VARIABLES */
DATA GINI_FIN;
LENGTH VARIABLE $ 50;
RUN;
DATA GINI_KS_CORR_FIN;
LENGTH GROUP $ 5 VARIABLE $ 50 LABEL $ 150;
RUN;

%MACRO GINI(DATA, VAR, VAR_ORIG);

	PROC LOGISTIC DATA=&DATA.;
		MODEL DEFAULT_12M(EVENT='1') = &VAR. / OUTROC=ROC;
		ROC;
	    ODS OUTPUT ROCASSOCIATION = AUC;
	RUN;

	DATA AUC;
	SET AUC;
	WHERE ROCMODEL = 'Model';
		GINI = 2 * AREA - 1;
		VARIABLE = "&VAR.";

		RENAME Area = AUC;
		DROP ROCModel;

	RUN;

	PROC SQL; 

	CREATE TABLE AUC AS 
		SELECT 
			main.*
			, label.LABEL
		FROM AUC main
		LEFT JOIN VARIABLELIST label
		ON label.Variable = "&VAR_ORIG.";

	QUIT;

	DATA GINI_FIN;
	RETAIN Variable GINI;
	SET GINI_FIN AUC;
		IF VARIABLE = '' THEN DELETE;
	RUN;

	PROC PRINT DATA=AUC NOOBS LABEL;
	    VAR AUC GINI;
	RUN;

	PROC SQL; DROP TABLE AUC, ROC; QUIT;

%MEND;

%MACRO UNIV_ANALYSIS(DATA, VAR, GROUP, N_BAR, TYPE_VAR);

*ods listing gpath ='C:\Users\meikee.pagsinohin\Documents\MA\plot' style=styles.new_font;
*ods graphics / attrpriority=none imagename="image01" imagefmt=png noborder;

PROC SQL;

	CREATE TABLE GROUP_LIST AS 
		SELECT 
			DISTINCT GROUP1, GROUP2
		FROM &DATA.;

	SELECT COUNT(DISTINCT &GROUP.) INTO :TOTAL_GROUP TRIMMED FROM GROUP_LIST;
	SELECT DISTINCT &GROUP. INTO :GROUP1-:GROUP&TOTAL_GROUP. FROM GROUP_LIST;

QUIT;

%DO M = 1 %TO &TOTAL_GROUP.;
%PUT ------------ &M. OF &TOTAL_GROUP.: &&GROUP&M.;
	
	DATA TEMP;
	SET &DATA.;
	WHERE &GROUP. = "&&GROUP&M.";
	KEEP DEFAULT_12M DATUM &VAR. &GROUP.;
	RUN;

	%IF &TYPE_VAR. = "NUM" %THEN %DO;

		*ODS LISTING GPATH = "C:\Users\meikee.pagsinohin\Documents\MA\plot\&&GROUP&M._&VAR._DISTRIBUTION.jpeg";
		PROC GBARLINE DATA=TEMP;
			BAR	&VAR. / LEVELS=&N_BAR.;
			PLOT / SUMVAR=DEFAULT_12M	TYPE=MEAN;
			TITLE "&&GROUP&M.: Distribution of &VAR.";
		RUN;

		*ODS LISTING GPATH = "C:\Users\meikee.pagsinohin\Documents\MA\plot\&&GROUP&M._&VAR._BOXPLOT.jpeg";
		PROC SGPLOT  DATA=TEMP;
		   VBOX &VAR.;
		   TITLE "&&GROUP&M.: Boxplot of &VAR.";
		RUN; 

		*ODS LISTING GPATH = "C:\Users\meikee.pagsinohin\Documents\MA\plot\&&GROUP&M._&VAR._BOXPLOT_DEF.jpeg";
		PROC SGPLOT DATA=TEMP;
		   VBOX &VAR.  / GROUP = DEFAULT_12M;
		   TITLE "&&GROUP&M.: Boxplot of &VAR. for each category";
		RUN;

		PROC NPAR1WAY DATA=TEMP EDF;
			CLASS DEFAULT_12M;
			VAR &VAR.;
			OUTPUT OUT=KS_STATISTICS(RENAME=(_D_=KS_STAT _VAR_=VARIABLE) KEEP=_VAR_ _D_);
		RUN;

		PROC CORR DATA=TEMP OUT=CORR(WHERE=(_TYPE_="CORR") RENAME=(_NAME_=VARIABLE DEFAULT_12M=CORR));
			VAR DEFAULT_12M;
			WITH &VAR.;
		RUN;

		%GINI(DATA=TEMP, VAR=&VAR., VAR_ORIG=&VAR.);

		PROC SQL;

			CREATE TABLE GINI_KS_CORR AS
			SELECT 
				"&&GROUP&M." AS GROUP LENGTH=5
				, gini.VARIABLE
				, gini.GINI
				, gini.AUC
				, gini.LABEL
				, ks.KS_STAT
				, corr.CORR
			FROM GINI_FIN gini

			LEFT JOIN KS_STATISTICS ks
			ON ks.VARIABLE = gini.VARIABLE

			LEFT JOIN CORR corr
			ON corr.VARIABLE = gini.VARIABLE;

		QUIT;

	%END;
	%IF &TYPE_VAR. = "CAT" %THEN %DO;

		*ODS LISTING GPATH = "C:\Users\meikee.pagsinohin\Documents\MA\plot\&&GROUP&M._&VAR._DISTRIBUTION.jpeg";
		PROC GBARLINE DATA=TEMP;
			BAR	&VAR. ;
			PLOT / SUMVAR=DEFAULT_12M	TYPE=MEAN;
			TITLE "&&GROUP&M.: Distribution of &VAR.";
		RUN;

		PROC SQL;
			SELECT COUNT(DISTINCT &VAR.) INTO :TOTALCAT FROM TEMP;
			SELECT DISTINCT &VAR. INTO :VALUE1- FROM TEMP;
		QUIT;

		DATA TEMP;
		SET TEMP;

		%DO J = 1 %TO &TOTALCAT.;
			IF &VAR. = "&&VALUE&J." THEN &VAR.__&&VALUE&J. = 1;
			ELSE &VAR.__&&VALUE&J. = 0;
		%END;

		RUN;

		%DO K = 1 %TO &TOTALCAT.;
		%PUT ------------ &K. OF &TOTALCAT.: &VAR.__&&VALUE&K.;
			%GINI(DATA=TEMP, VAR=&VAR.__&&VALUE&K., VAR_ORIG=&VAR.);
		%END;

		DATA GINI_KS_CORR;
		RETAIN GROUP;
		SET GINI_FIN;

		LENGTH GROUP $ 5;
		GROUP = "&&GROUP&M.";
		KEEP GROUP VARIABLE GINI AUC LABEL;

		RUN;

	%END;
	%IF &TYPE_VAR. = "IND" %THEN %DO;

		*ODS LISTING GPATH = "C:\Users\meikee.pagsinohin\Documents\MA\plot\&&GROUP&M._&VAR._DISTRIBUTION.jpeg";
		PROC GBARLINE DATA=TEMP;
			BAR	&VAR. / DISCRETE ;
			PLOT / SUMVAR=DEFAULT_12M	TYPE=MEAN;
			TITLE "&&GROUP&M.: Distribution of &VAR.";
		RUN;

		%GINI(DATA=TEMP, VAR=&VAR., VAR_ORIG=&VAR.);

		DATA GINI_KS_CORR;
		RETAIN GROUP;
		SET GINI_FIN;

		LENGTH GROUP $ 5;
		GROUP = "&&GROUP&M.";
		KEEP GROUP VARIABLE GINI AUC LABEL;

		RUN;

	%END;

	DATA GINI_KS_CORR_FIN;
	SET GINI_KS_CORR_FIN GINI_KS_CORR;
		IF VARIABLE = '' THEN DELETE;
	RUN;

	PROC SQL; DROP TABLE TEMP; QUIT;
	ods _all_ close;

%END;

%MEND;

%MACRO UNIV_ANALYSIS2(DATA, GROUP, TYPE_VAR, NBAR);

PROC SQL;

	SELECT COUNT(*) INTO :TOTAL TRIMMED FROM VARIABLELIST WHERE TYPE = "&TYPE_VAR.";
	SELECT VARIABLE INTO :VAR1-:VAR&TOTAL. FROM VARIABLELIST WHERE TYPE = "&TYPE_VAR.";

QUIT;

	%DO I = 1 %TO &TOTAL.;
	%PUT ------------ &I. OF &TOTAL.: &&VAR&I.;
		%UNIV_ANALYSIS(DATA=&DATA., VAR=&&VAR&I., GROUP=&GROUP., N_BAR=&NBAR., TYPE_VAR="&TYPE_VAR.");
	%END;

%MEND;

*%UNIV_ANALYSIS(DATA=&USED_DATASET., GROUP=GROUP1, VAR=fico, N_BAR=10, TYPE_VAR="NUM");
*%UNIV_ANALYSIS(DATA=&USED_DATASET., GROUP=GROUP2, VAR=fico, N_BAR=10, TYPE_VAR="NUM");
*%UNIV_ANALYSIS(DATA=&USED_DATASET., GROUP=GROUP2, VAR=us_reg, N_BAR=10, TYPE_VAR="CAT");

%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP1, TYPE_VAR=NUM, NBAR=10);
%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP1, TYPE_VAR=CAT);
%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP1, TYPE_VAR=IND);

%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP2, TYPE_VAR=NUM, NBAR=10);
%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP2, TYPE_VAR=CAT);
%UNIV_ANALYSIS2(DATA=&USED_DATASET., GROUP=GROUP2, TYPE_VAR=IND);

/* STATISTICS FOR NUMERIC VARIABLES */
ODS SELECT NONE;
PROC MEANS DATA=&USED_DATASET. StackODSOutput N NMISS SUM MEAN STD MIN P1 P5 P25 MEDIAN P75 P95 P99 MAX; 
VAR &NUM_VAR.;
CLASS DEFAULT_12M;
ODS OUTPUT summary=LongPctls_DEF;
RUN;

PROC MEANS DATA=&USED_DATASET. StackODSOutput N NMISS SUM MEAN STD MIN P1 P5 P25 MEDIAN P75 P95 P99 MAX; 
VAR &NUM_VAR.;
ODS OUTPUT summary=LongPctls;
RUN;
ODS SELECT ALL;

DATA LongPctls;
RETAIN CATEGORY;
SET LongPctls_DEF LongPctls ;

CATEGORY = STRIP(PUT(DEFAULT_12M,8.));
IF CATEGORY = . THEN CATEGORY = 'ALL';

FORMAT MISS_PERCENTAGE PERCENT7.2;
MISS_PERC = NMISS/(NMISS+N);

DROP NObs _control_ DEFAULT_12M;

RUN;

PROC SORT DATA=LongPctls OUT=LongPctls;
BY Variable CATEGORY;
RUN;

PROC SQL; DROP TABLE LongPctls_DEF; QUIT;

PROC SQL;

CREATE TABLE GINI_grouped AS
	SELECT 
		pctls.*
		, gini.min_GINI
		, gini.max_GINI
		, gini.AUC
	FROM LongPctls pctls
	LEFT JOIN 
		(SELECT 
			LABEL
			, MIN(gini.GINI) AS min_GINI
			, MAX(gini.GINI) AS max_GINI
			, MAX(gini.AUC)  AS AUC
		FROM GINI_fin gini
		GROUP BY LABEL) gini

	ON pctls.LABEL = gini.LABEL
	AND CATEGORY = 'ALL';

QUIT;

ODS GRAPHICS OFF;